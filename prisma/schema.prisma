// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// the below models are main schema used for course selling app for basic user and course
// model User {
//   id               String   @id @default(uuid())
//   username         String   @unique
//   password         String
//   createdAt        DateTime @default(now())
//   updatedAt        DateTime @updatedAt
//   purchasedCourses Course[]
// }

// model Course {
//   id        String @id @default(uuid())
//   name      String
//   desc      String
//   price     Float
//   imagelink String
//   User      User[]
// }

// These below are edited for next-auth adapter schema used to save information from google and any other provider for user to login

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String?   @unique
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  sessions         Session[]
  //below are used in signup for courseselling app, the above are in schema of next-auth adpater
  username         String?   @unique
  password         String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  role             Role      @default(user)
  purchasedCourses Course[]
}

enum Role {
  admin
  user
}

model Course {
  id          String  @id @default(uuid())
  title       String
  description String
  price       Float
  imageLink   String
  published   Boolean @default(true)
  User        User[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
